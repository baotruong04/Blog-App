{{/*
Integration test to verify end-to-end connectivity
*/}}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "blog-app.fullname" . }}-test-connectivity"
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "blog-app.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
  - name: test-connectivity
    image: curlimages/curl:8.0.1
    command: ['sh', '-c']
    args:
    - |
      set -e
      echo "Testing end-to-end connectivity..."
      
      # Wait for deployments to be ready
      echo "Waiting for deployments to be ready..."
      sleep 30
      
      # Test client service connectivity (internal)
      echo "Testing client service connectivity..."
      curl -f -s -o /dev/null --max-time 10 http://{{ include "blog-app.fullname" . }}-client.{{ .Values.namespace.name }}.svc.cluster.local:{{ .Values.client.service.port }}/
      echo "✓ Client service is accessible internally"
      
      # Test server service connectivity (internal)  
      echo "Testing server service connectivity..."
      curl -f -s -o /dev/null --max-time 10 http://{{ include "blog-app.fullname" . }}-server.{{ .Values.namespace.name }}.svc.cluster.local:{{ .Values.server.service.port }}/
      echo "✓ Server service is accessible internally"
      
      # Test health endpoints specifically
      echo "Testing health endpoints..."
      curl -f -s --max-time 5 http://{{ include "blog-app.fullname" . }}-client.{{ .Values.namespace.name }}.svc.cluster.local:{{ .Values.client.service.port }}{{ .Values.client.probes.readiness.path }}
      echo "✓ Client health endpoint responds"
      
      curl -f -s --max-time 5 http://{{ include "blog-app.fullname" . }}-server.{{ .Values.namespace.name }}.svc.cluster.local:{{ .Values.server.service.port }}{{ .Values.server.probes.readiness.path }}
      echo "✓ Server health endpoint responds"
      
      echo "Connectivity test PASSED!"
